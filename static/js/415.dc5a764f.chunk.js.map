{"version":3,"file":"static/js/415.dc5a764f.chunk.js","mappings":"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","sources":["api/index.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = `323feb2b334a1ab1620295d851f665df`;\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const getMovie = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getMovieByName = async ({ searchQuery }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getInfoMovie = async ({ movieId }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?&api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getCredits = async ({ movieId }, credits) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/${credits}?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 16px;\n\n  padding: 0px;\n  margin-top: 16px;\n  margin-bottom: 0;\n  margin-left: auto;\n  margin-right: auto;\n\n \n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(3, minmax(220px, 1fr));\n  }\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(4, minmax(220px, 1fr));\n  }\n`;\n\nexport const WrapCard = styled.li`\n  width: 100%;\n  list-style: none;\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0) 63.48%,\n    rgba(0, 0, 0, 0.9) 92.16%\n  );\n  border-radius: 5px;\n\n  &:hover {\n    scale: 1.01;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 320px;\n  border-radius: 5px;\n`;\n\nexport const Title = styled.h3`\n  padding: 8px 12px;\n  margin: 0px;\n  color: white;\n`;\n\nexport const LinkWrap = styled(Link) `\ntext-decoration: none;\n`","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, WrapCard, Img, Title, LinkWrap} from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const IMG_URL = `https://image.tmdb.org/t/p/w500/`;\n  const IMG_DF = 'https://via.placeholder.com/395x574?text=No+Image';\n\n  return (\n    <List>\n      {movies.map(({ id, original_title, original_name, poster_path }) => (\n        <WrapCard key={id}>\n          <LinkWrap to={`/movies/${id}`} state={{ from: location }}>\n            <Img\n              src={`${poster_path ? IMG_URL + poster_path : IMG_DF}`}\n              loading=\"lazy\"\n            />\n            <Title>{original_title ?? original_name}</Title>\n          </LinkWrap>\n        </WrapCard>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport { getMovie } from '../api/index';\nimport { MovieList } from '../components/MovieList/MovieList';\nimport { useEffect } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await getMovie();\n\n        if (data.results.length === 0) {\n          throw Error(`No trend movies\"`);\n        }\n        const movies = data.results.map(\n          ({ id, original_name, original_title, poster_path }) => ({\n            id,\n            original_name,\n            original_title,\n            poster_path,\n          })\n        );\n\n        setMovies(prevMovies => [...movies]);\n        console.log(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MovieList movies={movies}></MovieList>\n    </main>\n  );\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","BASE_URL","getMovie","fetch","response","json","data","console","log","Error","getMovieByName","searchQuery","getInfoMovie","movieId","getCredits","credits","List","styled","WrapCard","Img","Title","LinkWrap","Link","MovieList","movies","location","useLocation","map","id","original_title","original_name","poster_path","to","state","from","src","loading","useState","setMovies","useEffect","fetchMovies","results","length","prevMovies","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}