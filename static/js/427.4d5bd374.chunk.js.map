{"version":3,"file":"static/js/427.4d5bd374.chunk.js","mappings":"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","sources":["api/index.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetals/MovieDetals.styled.jsx","pages/MovieDetals/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = `323feb2b334a1ab1620295d851f665df`;\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const getMovie = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getMovieByName = async ({ searchQuery }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getInfoMovie = async ({ movieId }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?&api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getCredits = async ({ movieId }, credits) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/${credits}?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n","import styled from \"@emotion/styled\";\n\nexport const WrapCard = styled.div`\nmargin-top: 16px;\ndisplay: flex;\ngap: 16px;\n`\n\nexport const WrapInfo = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: spase-between;\n`\n\nexport const Title = styled.h2`\nfont-size: 36px;\n`\n\nexport const SubTitle = styled.h3`\nmargin-bottom: 16px;\nfont-size: 24px;\n`\n\nexport const Text = styled.p`\nmargin: 0px;\nfont-size: 16px;\n`","import { WrapInfo, WrapCard, Title, SubTitle, Text } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movieDetals }) => {\n  const { title, poster_path, overview, genres, release_date, vote_average } =\n    movieDetals;\n\n  const release = new Date(release_date).getFullYear();\n  const imageUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://via.placeholder.com/395x574?text=No+Image';\n\n  const genreList = getGenres();\n\n  function getGenres() {\n    if (!genres) {\n      return;\n    }\n    return genres.map(genre => genre.name).join(`, `);\n  }\n\n  return (\n    <WrapCard>\n      <img src={imageUrl} alt={title} loading=\"lazy\" width=\"240\" />\n\n      <WrapInfo>\n        <Title>\n          {' '}\n          {title} ({release}){' '}\n        </Title>\n        <Text>User score: {Math.round(vote_average * 10)}%</Text>\n        <SubTitle>Overview</SubTitle>\n        <Text>{overview}</Text>\n        <SubTitle>Genres</SubTitle>\n        <Text>{genreList}</Text>\n      </WrapInfo>\n    </WrapCard>\n  );\n};\nexport default MovieCard;\n\n\n\nMovieCard.propTypes = {\n  movieDetals: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired, \n      poster_path: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      genres: PropTypes.array, \n    })\n  ),\n};","import styled from \"@emotion/styled\";\nimport {Link } from 'react-router-dom';\n\nexport const Links = styled(Link)`\n  padding: 8px 16px;\n  margin-bottom: 8px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: orangered;\n  }\n`;","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { getInfoMovie } from '../../api';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { Links } from './MovieDetals.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackLink = useRef(location.state?.from ?? `/`);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const fetchInfoMovie = async () => {\n      try {\n        const data = await getInfoMovie({ movieId });\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n        setMovie('');\n      }\n    };\n\n    fetchInfoMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Links to={goBackLink.current}>Go back</Links>\n      <MovieCard movieDetals={movie} />\n      <p>Aditional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviwes\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","BASE_URL","getMovie","fetch","response","json","data","console","log","Error","getMovieByName","searchQuery","getInfoMovie","movieId","getCredits","credits","WrapCard","styled","WrapInfo","Title","SubTitle","Text","movieDetals","title","poster_path","overview","genres","release_date","vote_average","release","Date","getFullYear","imageUrl","genreList","map","genre","name","join","getGenres","src","alt","loading","width","Math","round","Links","Link","useState","movie","setMovie","useParams","location","useLocation","goBackLink","useRef","state","from","useEffect","fetchInfoMovie","to","current","Suspense","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}