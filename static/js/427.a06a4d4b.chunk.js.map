{"version":3,"file":"static/js/427.a06a4d4b.chunk.js","mappings":"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","sources":["api/index.js","pages/MovieDetals/MovieDetals.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetals/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = `323feb2b334a1ab1620295d851f665df`;\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const getMovie = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getMovieByName = async ({ searchQuery }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getInfoMovie = async ({ movieId }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?&api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getCredits = async ({ movieId }, credits) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/${credits}?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Links = styled(Link)`\n  padding: 4px 12px;\n  margin-bottom: 8px;\n  border: 4px solid #f0f0f0;\n  border-radius: 10px;\n  text-decoration: none;\n  color: black;\n  font-size: 12px;\n\n  @media (min-width: 768px) {\n    padding: 8px 16px;\n    font-size: 20px;\n  }\n  @media (min-width: 1200px) {\n    font-size: 26px;\n  }\n\n  &:hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 16px;\n  font-size: 16px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media (min-width: 1200px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Item = styled.li`\n  margin: 0px;\n  margin-top: 4px;\n  font-size: 12px;\n\n  @media (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 16px;\n  }\n  @media (min-width: 1200px) {\n    margin-top: 12px;\n    font-size: 24px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const WrapCard = styled.div`\n  margin-top: 16px;\n  padding: 16px;\n  display: flex;\n  gap: 8px;\n  border: solid #f0f0f0;\n\n  @media (min-width: 768px) {\n    gap: 20px;\n  }\n  @media (min-width: 1200px) {\n    gap: 24px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 240px;\n\n  @media (min-width: 768px) {\n    width: 300px;\n  }\n  @media (min-width: 1200px) {\n    width: 360px;\n  }\n`;\n\nexport const WrapInfo = styled.div`\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  justify-content: spase-between;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 0px;\n  margin-bottom: 0px;\n  font-size: 18px;\n\n  @media (min-width: 768px) {\n    font-size: 28px;\n  }\n  @media (min-width: 1200px) {\n    font-size: 36x;\n  }\n`;\n\nexport const SubTitle = styled.h3`\n  margin-bottom: 0px;\n  margin-top: 0px;\n  font-size: 16px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media (min-width: 1200px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin: 0px;\n  margin-top: 4px;\n  font-size: 12px;\n\n  @media (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 16px;\n  }\n  @media (min-width: 1200px) {\n    margin-top: 12px;\n    font-size: 24px;\n  }\n`;\n","import {\n  WrapInfo,\n  WrapCard,\n  Title,\n  SubTitle,\n  Text,\n  Img,\n} from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movieDetals }) => {\n  const {\n    title,\n    poster_path,\n    overview,\n    genres,\n    release_date,\n    vote_average,\n    runtime,\n  } = movieDetals;\n\n  console.log(movieDetals);\n\n  const release = new Date(release_date).getFullYear();\n  const imageUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://via.placeholder.com/395x574?text=No+Image';\n\n  const genreList = genres.map(genre => genre.name).join(`, `);\n\n  return (\n    <WrapCard>\n      <Img src={imageUrl} alt={title} loading=\"lazy\" />\n\n      <WrapInfo>\n        <Title>\n          {' '}\n          {title} ({release}){' '}\n        </Title>\n        <Text>User score: {Math.round(vote_average * 10)}%</Text>\n        <div>\n          <SubTitle>Overview</SubTitle>\n          <Text>{overview}</Text>\n        </div>\n        <div>\n          <SubTitle>Genres</SubTitle>\n          <Text>{genreList}</Text>\n        </div>\n        <div>\n          <SubTitle>Duration</SubTitle>\n          <Text>{runtime} min</Text>\n        </div>\n      </WrapInfo>\n    </WrapCard>\n  );\n};\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movieDetals: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n      overview: PropTypes.string,\n      release_date: PropTypes.string,\n      vote_average: PropTypes.number,\n      genres: PropTypes.array,\n    })\n  ),\n};\n","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getInfoMovie } from '../../api';\nimport { Item, Links, Text } from './MovieDetals.styled';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieDetails = () => {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n  const [movie, setMovie] = useState('');\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    movie && setStatus(STATUS.RESOLVED);\n  }, [movie]);\n\n  useEffect(() => {\n    const fetchInfoMovie = async () => {\n      setStatus(STATUS.PENDING);\n      try {\n        const data = await getInfoMovie({ movieId });\n        setMovie(data);\n        setStatus(STATUS.RESOLVED);\n        setError(null);\n      } catch (error) {\n        setError(error);\n        setStatus(STATUS.REJECTED);\n      }\n    };\n    fetchInfoMovie();\n  }, [movieId]);\n\n  if (status === STATUS.PENDING) {\n    return <p>Loading...</p>;\n  }\n\n  if (status === STATUS.RESOLVED) {\n    return (\n      <div>\n        <Links to={location.state?.from || '/movies'}>Go back</Links>\n        <MovieCard movieDetals={movie} />\n        <Text>Aditional information</Text>\n        <ul>\n          <Item>\n            <Link to=\"cast\">Cast</Link>\n          </Item>\n          <Item>\n            <Link to=\"reviwes\">Reviews</Link>\n          </Item>\n        </ul>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n    );\n  }\n\n  if (status === STATUS.REJECTED) {\n    return <ErrorMessage>{error}</ErrorMessage>;\n  }\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","BASE_URL","getMovie","fetch","response","json","data","console","log","Error","getMovieByName","searchQuery","getInfoMovie","movieId","getCredits","credits","Links","styled","Link","Text","Item","WrapCard","Img","WrapInfo","Title","SubTitle","movieDetals","title","poster_path","overview","genres","release_date","vote_average","runtime","release","Date","getFullYear","imageUrl","genreList","map","genre","name","join","src","alt","loading","Math","round","STATUS","useState","status","setStatus","error","setError","movie","setMovie","useParams","location","useLocation","useEffect","fetchInfoMovie","to","state","from","Suspense","ErrorMessage","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}