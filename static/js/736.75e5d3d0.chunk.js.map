{"version":3,"file":"static/js/736.75e5d3d0.chunk.js","mappings":"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","sources":["api/index.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = `323feb2b334a1ab1620295d851f665df`;\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const getMovie = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getMovieByName = async ({ searchQuery }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getInfoMovie = async ({ movieId }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?&api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getCredits = async ({ movieId }, credits) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/${credits}?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n","import styled from \"@emotion/styled\";\n\n\nexport const List = styled.ul`\npadding: 0px;\ndisplay: flex;\ngap: 12px;\njustify-content: start;\nflex-wrap: wrap;\n\n`\n\nexport const Item = styled.li`\npadding: 8px 10px;\nlist-style: none;\nwidth: calc((100%)/8);\nborder: solid grey;\ntext-align: center;\n`","import { getCredits } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {List, Item} from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const fetchCast = async () => {\n      try {\n        const data = await getCredits({ movieId }, 'credits');\n        if (data.cast.length === 0) {\n          throw Error(`No casts\"`);\n        }\n        const cast = data.cast.map(\n          ({ cast_id, profile_path, name, character }) => ({\n            cast_id,\n            profile_path,\n            name,\n            character,\n          })\n        );\n\n        setCast(cast.slice(0, 18));\n      } catch (error) {\n        console.log(error);\n        setCast('');\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast?.map(({ cast_id, profile_path, name, character }) => (\n        <Item key={cast_id}>\n          <img\n            src={`${\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                : 'https://via.placeholder.com/395x574?text=No+Image'\n            } `}\n            width={100}\n            alt={name}\n          />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\n\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","BASE_URL","getMovie","fetch","response","json","data","console","log","Error","getMovieByName","searchQuery","getInfoMovie","movieId","getCredits","credits","List","styled","Item","useState","cast","setCast","useParams","useEffect","fetchCast","length","map","cast_id","profile_path","name","character","slice","src","width","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}