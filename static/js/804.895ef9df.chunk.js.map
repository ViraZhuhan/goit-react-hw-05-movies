{"version":3,"file":"static/js/804.895ef9df.chunk.js","mappings":"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","sources":["api/index.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/MovieSearchForm/MovieSearchForm.styled.jsx","components/MovieSearchForm/MovieSearchForm.jsx","components/Skeleton/Skeleton.styled.jsx","components/Skeleton/Skeleton.jsx","pages/Movies.jsx"],"sourcesContent":["const API_KEY = `323feb2b334a1ab1620295d851f665df`;\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const getMovie = async () => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getMovieByName = async ({ searchQuery }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getInfoMovie = async ({ movieId }) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?&api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n\nexport const getCredits = async ({ movieId }, credits) => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/${credits}?api_key=${API_KEY}&page=1`\n    );\n    const data = await response.json();\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw new Error('Error fetching movie data: ' + error);\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 16px;\n\n  padding: 0px;\n  margin-top: 16px;\n  margin-bottom: 0;\n  margin-left: auto;\n  margin-right: auto;\n\n \n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(3, minmax(220px, 1fr));\n  }\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(4, minmax(220px, 1fr));\n  }\n`;\n\nexport const WrapCard = styled.li`\n  width: 100%;\n  list-style: none;\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0) 63.48%,\n    rgba(0, 0, 0, 0.9) 92.16%\n  );\n  border-radius: 5px;\n\n  &:hover {\n    scale: 1.01;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 320px;\n  border-radius: 5px;\n`;\n\nexport const Title = styled.h3`\n  padding: 8px 12px;\n  margin: 0px;\n  color: white;\n`;\n\nexport const LinkWrap = styled(Link) `\ntext-decoration: none;\n`","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, WrapCard, Img, Title, LinkWrap} from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const IMG_URL = `https://image.tmdb.org/t/p/w500/`;\n  const IMG_DF = 'https://via.placeholder.com/395x574?text=No+Image';\n\n  return (\n    <List>\n      {movies.map(({ id, original_title, original_name, poster_path }) => (\n        <WrapCard key={id}>\n          <LinkWrap to={`/movies/${id}`} state={{ from: location }}>\n            <Img\n              src={`${poster_path ? IMG_URL + poster_path : IMG_DF}`}\n              loading=\"lazy\"\n            />\n            <Title>{original_title ?? original_name}</Title>\n          </LinkWrap>\n        </WrapCard>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  position: relative;\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: solid 0.5px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n  svg {\n    position: absolute;\n    top: 25%;\n    right: 25%;\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 50%;\n  height: 44px;\n  font: inherit;\n  font-size: 20px;\n  border: solid 0.5px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { MagnifyingGlassIcon } from '@radix-ui/react-icons';\nimport { SearchForm, SearchButton, Input } from './MovieSearchForm.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieSearchForm = ({ setSearchParams }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSumbit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return toast.error('Please enter the query!');\n    }\n\n    setSearchParams({ searchQuery });\n    setSearchQuery('');\n  };\n\n  // const UpdateSearchQueryString = e => {\n  //   setSearchQuery(e.target.value);\n  //   if (e.target.value === '') {\n  //     return setSearchParams({});\n  //   }\n  //   setSearchParams({ searchQuery: e.target.value });\n  // };\n\n  const handleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSumbit}>\n      <Input\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Search movies\"\n        name=\"searchQuery\"\n        value={searchQuery}\n        onChange={handleChange}\n      />\n      <SearchButton type=\"submit\">\n        <MagnifyingGlassIcon />\n      </SearchButton>\n    </SearchForm>\n  );\n};\n\nexport default MovieSearchForm;\n\nMovieSearchForm.propTypes = {\n  setSearchParams: PropTypes.func,\n};\n","import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst skeletonAnimation = keyframes`\n  0% {\n    background-position: -200%;\n  }\n  100% {\n    background-position: 200%;\n  }\n`;\n\nexport const SkeletonList = styled.ul`\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const SkeletonCard = styled.li`\n  width: 100%;\n  height: 260px;\n  background: #fff;\n  border-radius: 5px;\n  padding: 25px 15px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);\n\n  .image {\n    position: relative;\n    width: 100%;\n    object-fit: cover;\n    overflow: hidden;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    background: linear-gradient(90deg, #eee 0px, #f5f5f5 40px, #eee 80px);\n    background-size: 200% 100%;\n    animation: ${skeletonAnimation} 1.5s ease-in-out infinite;\n  }\n\n  // .content {\n  //   padding: 20px 30px;\n  // }\n`;\n","import { SkeletonList, SkeletonCard } from './Skeleton.styled';\n\nexport default function Skeleton() {\n  return (\n    <SkeletonList>\n      {[...new Array(12)].map((el, index) => (\n        <SkeletonCard key={index}>\n          <div className=\"image\"></div>\n        </SkeletonCard>\n      ))}\n    </SkeletonList>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport MovieSearchForm from 'components/MovieSearchForm/MovieSearchForm';\nimport { getMovieByName } from '../api';\nimport Skeleton from 'components/Skeleton/Skeleton';\n// import ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  // const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery') ?? ' ';\n\n  useEffect(() => {\n    movies && setStatus(STATUS.RESOLVED);\n  }, [movies]);\n\n  useEffect(() => {\n    const fetchMoviesByname = async () => {\n      setStatus(STATUS.PENDING);\n      try {\n        const data = await getMovieByName({ searchQuery });\n        if (!data.results.length) {\n          throw new Error(\"No matches found\");\n        }\n        const movies = data.results.map(\n          ({\n            id,\n            original_name,\n            original_title,\n            genre_ids,\n            overview,\n            vote_average,\n            popularity,\n            poster_path,\n          }) => ({\n            id,\n            original_name,\n            original_title,\n            genre_ids,\n            overview,\n            vote_average,\n            popularity,\n            poster_path,\n          })\n        );\n        setMovies(movies);\n        setStatus(STATUS.RESOLVED);\n        // setError(null);\n      } catch (error) {\n        // setError(error);\n        setStatus(STATUS.REJECTED);\n      }\n    };\n\n    fetchMoviesByname();\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <MovieSearchForm setSearchParams={setSearchParams} />\n      {status === STATUS.PENDING && <Skeleton />}\n      {status === STATUS.RESOLVED && <MovieList movies={movies} />}\n      {/* {status === STATUS.REJECTED && <ErrorMessage>{error}</ErrorMessage>}  */}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","getMovie","fetch","response","json","data","console","log","Error","getMovieByName","searchQuery","getInfoMovie","movieId","getCredits","credits","List","styled","WrapCard","Img","Title","LinkWrap","Link","MovieList","movies","location","useLocation","map","id","original_title","original_name","poster_path","to","state","from","src","loading","SearchForm","SearchButton","Input","setSearchParams","useState","setSearchQuery","onSubmit","e","preventDefault","trim","toast","type","autoComplete","placeholder","name","value","onChange","target","skeletonAnimation","keyframes","SkeletonList","SkeletonCard","Skeleton","Array","el","index","className","STATUS","setMovies","status","setStatus","useSearchParams","searchParams","get","useEffect","fetchMoviesByname","results","length","genre_ids","overview","vote_average","popularity"],"sourceRoot":""}